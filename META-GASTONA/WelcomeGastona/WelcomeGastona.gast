#gastona#

   <fusion>
       META-GASTONA/utilApp/std/ExportBasicDialog.gasti

#javaj#

   <frames>
      Fmain, Gastona Welcome
      fastIndex, Gastona doc fast index

   <sysDefaultFonts>
      Monospaced, 13, 0, TextArea.font

   <layout of Fmain>
      EVA, 10, 10, 7, 7

        -, 200         ,  X
         , menu        ,  -              , lErrorState
         , eFilterTree , lContext & Name , -
       X , aSrcTree    , layHelpAndSamples, -
         ,   +         , options          , -
         , bFastDoc    , +

   <layout of fastIndex>
      EVA, 6, 6, 2, 2

         , X
         , rgDoctype
       X , sFastDoc
         , layExportBasic

   <layout of options>
      PANEL, X

      kDescription, kDetails

   <layout of menu>
      MENU,

      Help   , About Gastona , menuAbout

   <layout of layHelpAndSamples>
      TABBED,

      Help           , xHelp
      Samples        , laySamples
      Output consoles, consoles

   <layout of laySamples>
      EVA, 10, 10, 5, 5

      ----, 60     , , X, 
          , iSamples, - , lSampleTitle
       X  ,    +    ,   , xSample, -
          , eSearchSample, bSearchInSamples, bRun Sample, bGraph listix

   <layout of consoles>
      EVA, 6, 6, 4, 4

         ,                 , X
         , lStandard Output,   ,bClearConsole1
       X , o1ConsoleOut, -, -
       X , +
         , lStandard Error,   ,bClearConsole2
       X , o2ConsoleErr, -, -

#data#

   <Fmain posX> 200
   <Fmain posY> 100

   <fastIndex posX> 280
   <fastIndex posY> 140
   <fastIndex sizeX> 1300
   <fastIndex sizeY> 600


   <rgDoctype orientation> X
   <rgDoctype>
      label     , selected , cond
      All docs       , 1        , //LIKE '%'
      listix commands, 0        , //LIKE 'listix_command%'
      listix all     , 0        , //LIKE 'listix%'
      javaj layouts  , 0        , //LIKE 'javaj_layout%'
      javaj widgets  , 0        , //LIKE 'javaj_widget%'
      javaj all      , 0        , //LIKE 'javaj%'
      other docs     , 0        , //NOT LIKE 'javaj%' AND node NOT LIKE 'listix%'

   <bSearchInSamples image> javaj/img/linterna.png
   <bSearchInSamples> "All"

   <bClearConsole1> Clear
   <bClearConsole2> Clear

   <kDescription enabled> 0
   <kDescription selected> 1
   <kDetails enabled> 0
   <kDetails selected> 0

   <xSample tabulator> 3
   <xHelp tabulator> 3

   <aSrcTree separator> //_
   <aSrcTree rootTitle> Gastona documentation
   <aSrcTree folderIcons> javaj/img/book

   <iSamples visibleColumns> gastSample

   <xSample fileName> :mem gastScript
   <xHelp fileName> :mem helpText

   <sFastDoc visibleColumns> structType, groupInfo, name, desc
   <sFastDoc sqlSelect> //SELECT "" AS vacio

#listix#

   <main0>
      @<default position frame>
      LOAD, data, @<:sys user.home>/.gastonaLocal
      LOAD, data, .WelcomeGastona

      <! Extract documentation db
      DB,, EXECUTE, @<:infile META-GASTONA/WelcomeGastona/gastonaDocScript.sql>

   <main>
      @<updateTree>
      @<-- bClearConsole1>
      @<-- bClearConsole2>
      LISTIX, ExportBasic set (gridName dbName), sFastDoc, ""

   <-- eFilterTree>  @<updateTree>

   <updateTree>
      -->, aSrcTree data!, sqlSelect, //SELECT node FROM (@<SQL_DOC_EXT> @<Where&OrderBy from FilterTree>) ORDER BY node

   <SQL_DOC_EXT>
      // SELECT
      //     *,
      //     structType || (CASE WHEN groupInfo = "" THEN "" ELSE "_"||groupInfo END) || "_" || name AS node
      // FROM tGastItemDoc

   <default position frame>
      NUM=, Fmain posX, 0.1 * @<:lsx screenX>
      NUM=, Fmain posY, 0.1 * @<:lsx screenY>
      NUM=, Fmain sizeX, .7 * @<:lsx screenX>
      NUM=, Fmain sizeY, .6 * @<:lsx screenY>

   <-- bClearConsole1> MSG, o1ConsoleOut clear
   <-- bClearConsole2>
         MSG, o2ConsoleErr clear
         -->, lErrorState data!,,""

   <-- ERROR_DETECTED>
      -->, lErrorState data!,, *** Error(s) on the console!

   <-- aSrcTree>      LSX, setCurrentItem, @<aSrcTree selectedPath>
   <-- kDescription>  @<showDocCurrentItem>
   <-- kDetails>      @<showDocCurrentItem>

   <turn checks(enabled)>
      -->, kDescription control!, enabled, @<p1>
      -->, kDetails control!, enabled, @<p1>

   <setCurrentItem>
      VAR=, CURRENT_NODE, @<p1>
      LSX, showDocCurrentItem

   <showDocCurrentItem>
      <! Intended Loop for 1 record
      LOOP, SQL,, //SELECT * FROM (@<SQL_DOC_EXT>) WHERE node = '@<CURRENT_NODE>'
          ,, -->, lContext & Name data!,, //@<structType> : @<name>
          ,, @<build help text>
          ,, @<get samples>

   <build help text>
      GEN, :mem helpText, help format
      MSG, xHelp load
      IF, @<structType>
        , javaj_widget   , LISTIX, turn checks(enabled), 1
        , listix_command , LISTIX, turn checks(enabled), 1
        , ELSE           , LISTIX, turn checks(enabled), 0

   <help format>
      //
      // NAME        : @<name>
      // DOC TYPE    : @<structType>  GROUP: @<groupInfo>  FREQUENCY: @<importance>
      // JAVA CLASS  : @<javaClass>
      // DESCRIPTION : @<desc>
      //
      //@<print help literal>
      //@<attributes and messages>
      //@<syntaxes parameters and options>

   <print help literal>
      CHECK, !=, @<structType>-@<kDescription selected>, javaj_widget-0
      CHECK, !=, @<structType>-@<kDescription selected>, listix_command-0
      STRCONV, STRE-TEXT, helpText
      //
      //

   <! javaj widgets attributes and messages
   <!

   <attributes and messages>
      CHECK, =, @<structType>, javaj_widget
      //   LIST OF ATTRIBUTES:
      //   ----------------------------------------
      //
      LOOP, SQL,, //SELECT * FROM tZWidgetAttributes WHERE widName = '@<name>'
          ,, //      @<flechita> <NAME@<name join>> @<possibleValues> @<desc detail>
      //
      //
      //   LIST OF MESSAGES:
      //   ----------------------------------------
      //
      LOOP, SQL,, //SELECT * FROM tZWidgetMessages WHERE widName = '@<name>'
          ,, //      @<flechita> "NAME@<msg join>" @<desc detail>

   <desc detail>
      CHECK, =, @<kDetails selected>, 1
      //
      //          @<desc>
      //

   <name join> LISTIX, join, @<name>
   <msg join>  LISTIX, join, @<msg>

   <join>
      IN CASE, @<p1>
             , ""  , //
             , ELSE, // @<p1>

   <flechita>
      IN CASE, @<in_out>
             , in   , "--o"
             , out  , "o--"
             , inout, "o-o"
             , ELSE , "o?o"

   <! listix command syntaxes and options
   <!

   <syntaxes parameters and options>
      CHECK, =, @<structType>, listix_command
      //
      //
      LOOP, SQL,, //SELECT *, tlsxCmdSyntaxHead.desc AS synDesc FROM tlsxCmdSyntaxParams LEFT JOIN tlsxCmdSyntaxHead USING (cmdName, synIndx) WHERE cmdName = '@<name>' ORDER BY synIndx+0, paramIndx+0
          ,, @<addOneSyntax>

   <addOneSyntax>
      VAR=, current syntax index, @<synIndx>
      //      --------- SYNTAX @<synIndx> ------------------------------
      //      @<print syntax desc>
      //      @<cmdName>, @<syntax parameters>
      //
      LOOP, SQL,, //SELECT * FROM tlsxCmdSyntaxOpts WHERE cmdName = '@<name>' AND (synIndx = '@<current syntax index>' OR synIndx = 'x')
          ,, //       , @<optionName>, @<parameters>
      @<detail parameters & options>
      //
      //

   <print syntax desc>
      CHECK, =, @<kDetails selected>, 1
      //@<synDesc>
      //

   <syntax parameters>
      SUB LOOP, paramName,
              , WHILE, synIndx
              , LINK , ", "

   <detail parameters & options>
      CHECK, =, @<kDetails selected>, 1
<!      //      -- PARAMETERS DETAIL:
      //
      //
      //
      LOOP, SQL,, //SELECT *, paramIndx+1 AS parNo FROM tlsxCmdSyntaxParams WHERE cmdName = '@<name>' AND synIndx = '@<current syntax index>' ORDER BY paramIndx+0
          ,, //        P) @<paramName> [@<defVal>] @<:decode desc>
      //
      //
<!      //      --- OPTIONS DETAIL:
      //
      LOOP, SQL,, //SELECT * FROM tlsxCmdSyntaxOpts WHERE cmdName = '@<name>' AND (synIndx = '@<current syntax index>' OR synIndx = 'x')
          ,, //        O) @<optionName> [@<defVal>] @<:decode desc>

   <! samples, iSamples and xSample
   <!

   <get samples>
      -->, iSamples data!, sqlSelect, //SELECT * FROM tGastExamples WHERE name = '@<name>'

   <-- eSearchSample>
      @<-- bSearchInSamples>

   <-- bSearchInSamples>
      -->, iSamples data!, sqlSelect, //SELECT * FROM tGastExamples @<Where&OrderBy from FilterSample>


   <-- iSamples>
      CHECK, VAR, iSamples selected.gastSample

      -->, lSampleTitle data!,, //@<iSamples selected.gastSample> (@<iSamples selected.name>)
      GEN, :mem gastScript, sampleAsText
      MSG, xSample load

   <sampleAsText>
      CHECK, VAR, iSamples selected.sampleBody
      STRCONV, STRE-TEXT, iSamples selected.sampleBody

   <-- bRun Sample>
      MSG, xSample save
      @<-- bClearConsole1>
      @<-- bClearConsole2>
      GAST, :mem gastScript
      
   <-- bGraph listix>
      GEN, :mem odoto, runJsRunGlassDot
      MICO, ONCE
      
   <-- menuAbout>
      JAVA STATIC, gastona.gastona, showAboutGastona

   <Where&OrderBy from FilterTree>
      JAVA STATIC, javaj.widgets.table.util.utilAsiste, getComposedWhereCondition, @<eFilterTree>, name, groupInfo, desc, helpText

   <Where&OrderBy from FilterSample>
      JAVA STATIC, javaj.widgets.table.util.utilAsiste, getComposedWhereCondition, @<eSearchSample>, name, gastSample, sampleBody

   <! ----------------- fast doc

   <-- bFastDoc>
      -->, sFastDoc data!, sqlSelect, //@<SQLFastDoc>
      LISTIX, ExportBasic set (gridName dbName), sFastDoc, ""
      -->, fastIndex show

   <-- rgDoctype>
      -->, sFastDoc data!, sqlSelect, //@<SQLFastDoc>
      LISTIX, ExportBasic set (gridName dbName), sFastDoc, ""

   <-- sFastDoc>
      LSX, setCurrentItem, @<sFastDoc selected.node>

   <SQLFastDoc>
      //SELECT node, structType, groupInfo, name, desc
      // FROM  (@<SQL_DOC_EXT>)
      // WHERE node @<rgDoctype selected.cond>
      // ORDER BY node, name

   <!---
   <!--- xSample to dot and show it using viz.js (online)
   <!---
      
   <runJsRunGlassDot> JS, @<JsRunGlassDot>

   <JsRunGlassDot>
     //@<:infile META-GASTONA/js/Eva.js>
     //@<:infile META-GASTONA/utilApp/gastAnalyzer/gastGlass2dot.js>
     //
     //gastGlass2dot (evaFileUTF82obj ("@<:solve-encode-utf8 xSample>"));
      
   <dotMemFile>
      @<:infile :mem odoto>
   
   <GET />
     //<html>
     //<head>
     //</head><body>
     //<script src="http://www.webgraphviz.com/viz.js"></script>
     //<script>
     //
     //   var miData = "@<:solve-encode-utf8 dotMemFile>".replace (/\+/g, "%20");
     //   document.body.innerHTML = "<hr>"  + Viz(decodeURIComponent (miData), "svg");
     //
     //</script></body></html>

#**#
